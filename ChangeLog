TODO:
* buffer scan
  - align with footer range
* unbounded scan
  - determine optimal buffer size
  - buffer size vs scan block size?
  - handle boundary matches
  - add range to determine size of scan buffer?

* patterns support
  - is there a pratical need to support signature with patterns that contain pattern gaps?
* make sure scan buffer is sufficient large for bounded scan
* state add relative_from_start, relative_from_end and unbound scan trees and active nodes
* add memory aligned reads?

Tools:
* sigscan/scan_handle
  - print result offset

Tests:
* add test signature files
  - tar, tar_old
* sigscan_test_scanner
  - add scan result (signature) identifier check
  - offsets relative from end
  - scan file and file IO handle
  - build scan tree with no signatures, single signature, multiple signatures
  - different buffer sizes
  - header signature range that does not start at 0
* pysigscan_test_scanner
  - fix TODOs
  - offsets relative from end
  - scan file and file object
  - build scan tree with no signatures, single signature, multiple signatures
* sigscan
  - add test

20141212
* see `git log' for more recent change log
* worked on initial version

20141208
* worked on initial version

20141116
* worked on initial version

20141115
* Initial version based on dfvfs scanner and libexe

